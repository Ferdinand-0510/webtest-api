{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u985ED\\u69FD\\\\Python\\\\StockWeb\\\\webtest\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// 創建axios實例\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  // Flask後端地址\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // 檢查session狀態\n  const checkSession = async () => {\n    try {\n      const response = await api.get('/api/check-session');\n      if (response.data.loggedIn) {\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      console.error('Session檢查失敗:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    checkSession();\n  }, []);\n\n  // 註冊函數\n  const register = async userData => {\n    try {\n      const response = await api.post('/api/register', {\n        username: userData.username,\n        email: userData.email,\n        password: userData.password,\n        phone: userData.phone,\n        customerUuid: userData.customerUuid || 'default-uuid' // 如果沒有提供則使用默認值\n      });\n      if (response.data.success) {\n        return {\n          success: true,\n          message: '註冊成功'\n        };\n      }\n      return {\n        success: false,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('註冊失敗:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || '註冊失敗，請稍後再試'\n      };\n    }\n  };\n\n  // 登入函數\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/api/login', {\n        username,\n        password\n      });\n      if (response.data.success) {\n        setUser(response.data.user);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('登入失敗:', error);\n      return false;\n    }\n  };\n\n  // 登出函數\n  const logout = async () => {\n    try {\n      await api.post('/api/logout');\n      setUser(null);\n    } catch (error) {\n      console.error('登出失敗:', error);\n    }\n  };\n\n  // 加載中顯示\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register,\n      // 添加註冊函數到context\n      loading,\n      isAuthenticated: !!user,\n      api // 導出 api 實例以供其他組件使用\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth必須在AuthProvider內使用');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","withCredentials","headers","AuthProvider","children","_s","user","setUser","loading","setLoading","checkSession","response","get","data","loggedIn","error","console","register","userData","post","username","email","password","phone","customerUuid","success","message","_error$response","_error$response$data","login","logout","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","isAuthenticated","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/類D槽/Python/StockWeb/webtest/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\n// 創建axios實例\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',  // Flask後端地址\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // 檢查session狀態\r\n  const checkSession = async () => {\r\n    try {\r\n      const response = await api.get('/api/check-session');\r\n      if (response.data.loggedIn) {\r\n        setUser(response.data.user);\r\n      }\r\n    } catch (error) {\r\n      console.error('Session檢查失敗:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkSession();\r\n  }, []);\r\n\r\n  // 註冊函數\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/api/register', {\r\n        username: userData.username,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        phone: userData.phone,\r\n        customerUuid: userData.customerUuid || 'default-uuid' // 如果沒有提供則使用默認值\r\n      });\r\n\r\n      if (response.data.success) {\r\n        return {\r\n          success: true,\r\n          message: '註冊成功'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        message: response.data.message\r\n      };\r\n    } catch (error) {\r\n      console.error('註冊失敗:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || '註冊失敗，請稍後再試'\r\n      };\r\n    }\r\n  };\r\n\r\n  // 登入函數\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await api.post('/api/login', {\r\n        username,\r\n        password\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('登入失敗:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // 登出函數\r\n  const logout = async () => {\r\n    try {\r\n      await api.post('/api/logout');\r\n      setUser(null);\r\n    } catch (error) {\r\n      console.error('登出失敗:', error);\r\n    }\r\n  };\r\n\r\n  // 加載中顯示\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      login, \r\n      logout,\r\n      register, // 添加註冊函數到context\r\n      loading,\r\n      isAuthenticated: !!user,\r\n      api // 導出 api 實例以供其他組件使用\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth必須在AuthProvider內使用');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}